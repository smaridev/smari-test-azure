#!/bin/bash -e

# copy the docker config file from $SNAP into $SNAP_COMMON if it doesn't exist
if [ ! -f "$SNAP_DATA/config/daemon.json" ]; then
    mkdir -p "$SNAP_DATA/config"
    cp "$SNAP/config/daemon.json" "$SNAP_DATA/config/daemon.json"
fi

# get the hostname to set that in the config file as well
HOSTNAME=$(hostname)

# we need copy the config file into $SNAP_COMMON where it can be modified
# but also need to modify the "homedir" root level spec in the yaml to be
# "$SNAP_COMMON/var/lib/iotedge"
# as well as the management + workload uri's to live in a snap specific 
# portion of /run that is writable from within the snap
mkdir -p "$SNAP_DATA/etc/iotedge"
mkdir -p "$SNAP_COMMON/var/lib/iotedge"
mkdir -p "$SNAP_COMMON/run"
# TODO find a proper yaml library that preserves comments that we
# can use to configure this file programmatically
sed -e "s@homedir: \"/var/lib/iotedge\"@homedir: \"$SNAP_COMMON/var/lib/iotedge\"@" \
    -e "s@management_uri: \"unix:///var/run/iotedge/mgmt.sock\"@management_uri: \"unix://$SNAP_COMMON/run/mgmt.sock\"@" \
    -e "s@workload_uri: \"unix:///var/run/iotedge/workload.sock\"@workload_uri: \"unix://$SNAP_COMMON/run/workload.sock\"@" \
    -e "s@management_uri: \"fd://iotedge.mgmt.socket\"@management_uri: \"unix://$SNAP_COMMON/run/mgmt.sock\"@" \
    -e "s@workload_uri: \"fd://iotedge.socket\"@workload_uri: \"unix://$SNAP_COMMON/run/workload.sock\"@" \
    -e "s@hostname: \"<ADD HOSTNAME HERE>\"@hostname: \"$HOSTNAME\"@" \
    -e "s@uri: \"unix:///var/run/docker.sock\"@uri: \"unix://$SNAP_COMMON/run/docker.sock\"@" \
    < "$SNAP/etc/iotedge/config.yaml" > "$SNAP_DATA/etc/iotedge/config.yaml"

# also disable the service before installing so that it doesn't cause the 
# installation to be aborted
snapctl stop --disable "$SNAP_NAME.iotedged"

# disable the dockerd service because for now we don't have auto-connections
# for the necessary interfaces, and so dockerd will fail on initial install
# and the user will need to connect the interfaces and then startup dockerd
# manually
# when the snap is published in the global store and has auto-connections, 
# this can be removed
snapctl stop --disable "$SNAP_NAME.dockerd"